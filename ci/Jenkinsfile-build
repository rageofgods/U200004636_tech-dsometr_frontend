def RH_REGISTRY = ""
def RH_REGISTRY_CRED_ID = ""
def REGISTRY = ""
def REGISTRY_CRED_ID = ""
def DOCKER_FILE_NAME = ""
def DOCKER_BUILD_NAME = ""

withFolderProperties{
    RH_REGISTRY = "${env.RH_REGISTRY}"
    RH_REGISTRY_CRED_ID = "${env.RH_REGISTRY_CRED_ID}"
    REGISTRY = "${env.REGISTRY}"
    REGISTRY_CRED_ID = "${env.REGISTRY_CRED_ID}"
    DOCKER_FILE_NAME = "${env.DOCKER_FILE_NAME}"
    DOCKER_BUILD_NAME = "${env.DOCKER_BUILD_NAME}"
}

if (RH_REGISTRY == '' || RH_REGISTRY == null || RH_REGISTRY == 'null') {
    currentBuild.result = 'ABORTED'
    error('Not defined RH_REGISTRY in Folder properies plugin!')
}

pipeline {
    agent any

    environment {
        RH_REGISTRY = "${RH_REGISTRY}"
        RH_REGISTRY_CRED_ID = "${RH_REGISTRY_CRED_ID}"
        REGISTRY = "${REGISTRY}"
        REGISTRY_CRED_ID = "${REGISTRY_CRED_ID}"
        DOCKER_FILE_NAME = "${DOCKER_FILE_NAME}"
        DOCKER_BUILD_NAME = "${OCP_APP_NAME}" //docker build name = ocp app name
        GIT_COMMIT_SHORT = sh(
            script: "printf \$(git rev-parse --short ${GIT_COMMIT})",
            returnStdout: true
        )
    }
    stages {
        stage("Docker registry login") {
            steps {
                echo "=====docker login registry====="
                withCredentials([usernamePassword(credentialsId: "$REGISTRY_CRED_ID", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login $REGISTRY -u $USERNAME -p $PASSWORD
                    """
                }
                withCredentials([usernamePassword(credentialsId: "$RH_REGISTRY_CRED_ID", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login $RH_REGISTRY -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        stage("Docker build image") {
            steps {
                echo "=====docker login and build====="
                sh """
                docker build -t $REGISTRY/$DOCKER_BUILD_NAME:$GIT_COMMIT_SHORT -f $DOCKER_FILE_NAME .
                """
            }
        }
        stage("Docker push image") {
            steps {
                echo "=====docker login and push====="
                sh """
                docker push $REGISTRY/$DOCKER_BUILD_NAME:$GIT_COMMIT_SHORT
                """
            }
        }
    }
}